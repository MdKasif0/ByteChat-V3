
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      allow delete: if false;
    }

    match /calls/{callId} {
      allow read, update: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid == request.resource.data.callerId;
    }

    match /chats/{chatId} {
      // Allow a user to get a chat document if their UID is part of the document ID.
      // This is necessary for checking if a chat already exists before creating one.
      allow get: if request.auth.uid in chatId.split('_');

      // A user can list/query chats they are a participant in.
      // This relies on the client query filtering by participantUids.
      allow list: if request.auth.uid in resource.data.participantUids;

      // A user can create a chat if they are one of the participants being added.
      allow create: if request.auth.uid in request.resource.data.participantUids
                      && request.resource.data.participantUids.size() == 2;

      // A user can update a chat (e.g., for typing indicators) if they are a participant.
      allow update: if request.auth.uid in resource.data.participantUids;

      // Deletion of chats is not allowed from the client.
      allow delete: if false;

      match /messages/{messageId} {
        allow read: if get(/databases/$(database)/documents/chats/$(chatId)).data.participantUids.hasAny([request.auth.uid]);

        allow create: if request.auth.uid == request.resource.data.senderUid &&
                        get(/databases/$(database)/documents/chats/$(chatId)).data.participantUids.hasAny([request.auth.uid]);

        // Allow updates (reactions, edits, soft-deletes) if user is in the chat.
        // Client-side logic should enforce who can edit/delete what.
        allow update: if get(/databases/$(database)/documents/chats/$(chatId)).data.participantUids.hasAny([request.auth.uid]);

        allow delete: if false; // Using soft deletes via update
      }
    }
  }
}
